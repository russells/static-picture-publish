=head1 NAME

static-picture-publish - create a web dir structure from an image dir.

=head1 SYNOPSIS

B<static-picture-publish --help>

B<static-picture-publish --version>

B<static-picture-publish> I<[options]> I<picRoot> I<webRoot>

=head1 DESCRIPTION

Create a web directory structure from an image directory structure.
I<picRoot> is the root of the image directory, and I<webRoot> is the root
of the web directory.  Subdirectories of I<picroot> will be duplicated in
I<webRoot>, containing thumbnails and smaller versions of images in
I<picRoot>, along with XML and HTML web pages to enable viewing them.

B<static-picture-publish> produces XML output initially, then process that
with B<xsltproc> to produce HTML.  (This is only necessary because Internet
Explorer 6, while it can process XML and XSLT, does strange things when
given a relative path to the XSL stylesheet.  Firefox and Mozilla Seamonkey
can view the XML files well.)

If you start viewing the XML files (eg by opening index.xml in the web root
directory with a web browser), then all the links will take you to XML
files, which need to be processed correctly by your web browser.  If you
start viewing HTML files (by opening index.html, perhaps implicitly as a
DirectoryIndex file served by apache), then all the links will take you to
HTML files.

=head1 OPTIONS

=head2 General options

=over

=item --help

Print a help message, describing the program options.

=item --version

Print the program version and exit.

=item -q

=item --quiet

Run silently, without printing any normal output.

=item -v

=item --verbose

Print more information about actions.

=back

=head2 Image options

=over

=item -c

=item --copy

(Unimplemented) Copy the originals instead of symlinking them.

=item -eI<EXTENSIONS>

=item --extensions=I<EXTENSIONS>

Specify a comma-separated list of file extensions to process.  These files
must be recoginsed by the Python Imaging Library.  The extensions are
compared case-folded.  The default list is B<.jpg,.jpeg,.gif,.png>.  If
specified, the list is replaced, not extended.

=item -n

=item --no-originals

(Unimplemented) Don't symlink or copy originals.

=item -sI<IMAGE_SIZE>

=item --image-size=I<IMAGE_SIZE>

Set maximum dimension for images.  (Default 640x640 pixels)

=item -zI<THUMBNAIL_SIZE>

=item --thumbnail-size=I<THUMBNAIL_SIZE>

Set maximum dimension for thumbnails.  (Default 128x128 pixels)

=back

=head2 Markup options

=over

=item -g

=item --regen-markup

Force regeneration of HTML or XML output.

=item -N

=item --no-html

Don't create HTML from XML.  (Unimplemented)

=item -r

=item --regen-all

Force regeneration of all output.

=item -S

=item --subdir

Run as if in a subdirectory of the output directory.  This is used to
(re-)generate only a part of the output tree, so you don't have to process
the whole thing again if you've just changed on part.  This option requires
the stylesheet files (F<spp.css>, F<spp-dir.xsl> and F<spp-image.xsl>) to
already be in place.  They won't be copied in, and it's an error if they
can't be found by searching up the output directory tree.

This option also forces the creation of an "Up" link in the top-most
processed folder, which is not normally created.

=item -tI<TITLE>

=item --title=I<TITLE>

Set the HTML title.  This will appear on all pages as "B<Title - name>",
where B<Title> is what you set here, and B<name> is the name of the folder
or image you are viewing.

=back

=head2 Layout options

=over

=item --css=I<CSS>

CSS file to use in HTML or XML output. (Default inbuilt.)  The CSS file
will be copied into I<webRoot> and renamed to F<spp.css>.

=item --row=ROW

Number of images per row in HTML. (Default 3.)

=item --xsl-dir=I<XSL_DIR>

XSLT file to use for directory XML output. (Default inbuilt.)  The file
will be copied into I<webRoot> and renamed to F<spp-dir.xsl>.

=item --xsl-image=I<XSL_IMAGE>

XSLT file to use for image XML output. (Default inbuilt.)  The file will be
copied into I<webRoot> and renamed to F<spp-image.xsl>.

=back

=head2 Other options

=over

=item --delete

Delete unused files and directories in the output.  Files that have been
generated by B<static-picture-publish> (on this run or on previous runs)
will be kept, as well as any file called F<.htaccess>.

Using this options, you can rearrange your picture directories, and the web
copies will be kept up to date automatically after you run
B<.static-picture-publish> again, without accumulating old copies of
pictures and directories.

=item --xsltproc

To generate HTML, use the B<xsltproc> program instead of the python XML
libraries.

=back

=head1 PER-DIRECTORY CONFIG FILE

If B<static-picture-publish> finds a F<.static-picture-publish> or
F<.static-picture-publish.txt> file in the I<picRoot> or a subdirectory of
that, it is taken as a configuration file to specify how the contents of
that directory are to be processed.  Both files can exist, and both will be
read if they exist.

=head2 Format

The format of the file is like the INI format.  It can contain these
sections:

=over

=item [folder]

The C<[folder]> section can contain one key, C<[thumbnail]>, which is the
name of an image in the directory.  The thumbnail of that image will be
used as the icon for that directory in its parent directory.  It this
secion of key is missing, a random image from the directory will be used as
the thumbnail.

=item [include]

If the C<[include]> section exists, only files and directories that are
mentioned in here will be included in the output.  The value of the entry
is a space separated list of C<key=value> items.  The possible keys are
explained below.

A key without a value results in that key having a value of C<True>.

If there exists a key with no value, and the key is one of C<1>, C<on>,
C<true> or C<yes> (boolean true, without regard to case), that results in
the key C<include> having the value C<True>.

If there exists a key with no value, and the key is one of C<0>, C<off>,
C<false> or C<no> (boolean false, without regard to case), that results in
the key C<include> having the value C<False>.

If there is no C<include> key, or no key with a boolean name and no value,
then it is as if the section had a key-value pair of C<include=True>.

The C<[include]> section can contain one special key: C<*>.  The value of
this key is a boolean that specifies the default C<include> value for
entries.  The rationale for this is that if you wish to rotate just one
entry, that is done in the C<[include]> section, and having that section
makes the default rule to exclude anything not mentioned there, so you'd
then have to mention every file in the C<[include]> section.  Instead, you
can change the default with a C<*> key.

=item [exclude]

If the C<[exclude]> section exists, files and directories mentioned in
there can be excluded.  Like above, the value is a space separated list of
C<key=value> items.  Keys without values are handled as for the
C<[include]> section, except that the key that is affected by default is
C<exclude>.

=item [folder order]

Keys in this section are folder names, and each value is the position in
the output folder list for that folder.  The list is B<not> checked to see
that the indexes are within the number of folders available, which means
that if you miscalculate the folder numbers the program may abort.  The way
this list is used is that first the list of folders is sorted into lexical
order (locale-dependent), then each folder mentioned in C<[folder order]>
is put in the output list in that position, then the remaining folders are
put in the output list by "filling in the gaps" in order.

=item [image order]

This section is handled in the same way as the C<[folder order]> section
above, but for images.

=item [names]

(B<Unimplemented>) This section contains a list of C<original name = output
name> pairs.  All other references to the name are to the output name.

=back

=head2 [include] and [exclude] processing

The way that the C<[include]> and C<[exclude]> sections are handled is
slightly strange.

=over

=item *

Firstly, if there is no config file in this directory, or there is a config
file but it has no C<[include]> or C<[exclude]> sections, then all entries
are included.

=item *

If there is an C<[include]> section, the default action is to not include
an entry.

=item *

If the item is mentioned in the C<[include]> section, it is only included
if the value of the C<include> key is C<True>.  As above, this will be the
case if there is no C<include> key at all.

=item *

If the item is mentioned in the C<exclude> section, it is only included if
the value of the C<exclude> key is C<False>.  This will not normally be the
case, unless the C<exclude> key is mentioned explicitly.

=back

=head2 key-value pairs

=over

=item rotate=I<X>

Rotate the output images (thumbnail and web-sized version) by I<X> degrees
counterclockwise.  The original is not affected by this value, and is
presented un-rotated.

=item name=I<NAME>

(B<Unimplemented>) Specify the name to use for this entry in the output.  All
references to the image or folder will use I<NAME>.

=back

=head2 Example config file

 [include]
 a.jpg : include=1
 b.jpg : rotate=90
 c.jpg : rotate=-90 false
 d.jpg : True

 [exclude]
 d.jpg : True

With this config file, F<a.jpg> and F<b.jpg> will be included, but F<c.jpg>
and F<d.jpg> will not.  In addition, F<b.jpg> will be rotated by 90 degrees
counter-clockwise.

=head1 IMAGE COMMENTS

B<static-picture-publish> will use image comments that are saved by
B<gthumb>.  These are stored in files named like F<.comment/a.jpg.xml> for
example for an image called F<a.jpg>.  The "Notes" text from this file will
be used as a comment for the image in both the directory and image views.
It will be truncated to 75 characters in directory view and 295 characters
in image view.

Comments saved by other programs (B<gqview> and B<nautilus> in particular)
will be added when I get to it.

Storage of this information should really be a freedesktop.org standard.

=head1 EXAMPLES

Publish pictures from F</home/joe/pics> to F</var/www/pics>, specifying the
thumbnail size.

 static-picture-publish -z 100x100 /home/joe/pics /var/www/pics

=head1 BUGS

Some, probably...

=head1 AUTHOR

Russell Steicke <russells@adelie.cx>

=head1 COPYRIGHT

Copyright (C) 2006 Russell Steicke.  Released under the terms of the GNU
General Public License, but dedicated to the public domain at the beginning
of the tenth calendar year after publishing (ie the start of 2016 for
version 0.1, released in 2006).

This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

=head1 VERSION

0.1

